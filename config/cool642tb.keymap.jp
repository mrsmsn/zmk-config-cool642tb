#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define JP_DQT          AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_SQT          AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          INT_YEN           // Â¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(INT_YEN)       // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(INT_RO)        // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        comb2 {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        comb3 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <22 23>;
        };

        comb4 {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        comb5 {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <9 8>;
            timeout-ms = <0>;
            layers = <2>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R            &kp T                                            &kp Y      &kp U  &kp I      &kp O       &kp P
&mt LCTRL A       &kp S         &kp D         &kp F            &kp G        &trans            &trans            &kp H      &kp J  &kp K      &kp L       &mt RCTRL ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V            &kp B        &kp BACKSPACE     &kp DELETE        &kp N      &kp M  &kp COMMA  &kp PERIOD  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 BACKSPACE  &lt 2 SPACE  &lt 3 LANGUAGE_2  &lt 3 LANGUAGE_1  &lt 2 TAB                                &kp ESCAPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&kp ESC  &kp F7      &kp F8  &kp F9  &kp F12                              &trans         &kp JP_UNDERSCORE  &kp JP_PLUS  &kp MINUS     &kp JP_EQUAL
&trans   &kp LA(F4)  &kp F5  &kp F6  &kp F11  &trans        &bt BT_SEL 2  &trans         &trans             &trans       &kp LC(SEMI)  &trans
&trans   &kp F1      &kp F2  &kp F3  &kp F10  &bt BT_SEL 1  &bt BT_SEL 3  &kp LG(LS(S))  &trans             &trans       &trans        &trans
&trans   &trans      &trans  &trans  &trans   &trans        &trans        &trans                                                       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        NUM {
            bindings = <
&kp TAB                  &kp N7        &kp N8        &kp N9        &kp JP_EQUAL                  &kp HOME  &kp PAGE_DOWN          &kp PAGE_UP      &kp END     &kp DELETE
&mt LCTRL KP_ASTERISK    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_PLUS   &trans  &trans  &kp LEFT  &kp DOWN_ARROW         &kp UP_ARROW     &kp RIGHT   &trans
&mt LEFT_SHIFT KP_SLASH  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_MINUS  &trans  &trans  &trans    &kp RG(C_VOLUME_DOWN)  &kp C_VOLUME_UP  &kp K_MUTE  &trans
&trans                   &kp NUMBER_0  &kp PERIOD    &trans        &trans        &trans  &trans  &trans                                                        &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        Symbol {
            bindings = <
&kp JP_BACKQUOTE  &kp JP_AMPERSAND   &kp JP_ASTERISK   &trans        &trans                  &trans  &kp JP_LPAREN    &kp JP_RPAREN    &kp JP_PIPE   &kp JP_YEN
&kp JP_TILDE      &kp DLLR           &kp PRCNT         &kp JP_CARET  &trans  &trans  &trans  &trans  &kp JP_LBRACKET  &kp JP_RBRACKET  &kp JP_COLON  &kp SEMI
&trans            &kp EXCL           &kp JP_AT         &kp HASH      &trans  &trans  &trans  &trans  &kp JP_LBRACE    &kp JP_RBRACE    &kp JP_DQT    &kp JP_SQT
&trans            &trans             &trans            &trans        &trans  &trans  &trans  &trans                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN_ARROW>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans    &trans    &trans          &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB2  &mkp MB1  &msc MOVE_Y(5)  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &mkp MB4  &mkp MB5        &mkp MB3  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                        &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        layer_6 {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };
    };
};
